pip install awscli

aws configure
aws ec2 describe-regions

aws ec2 describe-regions --output table

aws iam create-group --group-name devops
aws iam create-user --user-name devv1

 aws iam add-user-to-group --user-name devv1 --group-name devops

 aws iam get-group --group-name devops

 https://aws.amazon.com/blogs/security/writing-iam-policies-how-to-grant-access-to-an-amazon-s3-bucket/

{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Effect": "Allow",
      "Action": "iam:*",
      "Resource": "*"
    }
  ]
}
cat > mypolicy.json

aws iam put-user-policy --user-name devv1 --policy-name MyPolicy --policy-document mypolicy.json
aws iam put-user-policy --user-name devs1 --policy-name MyPowerUserRole --policy-document file://mypolicy1.json

https://docs.aws.amazon.com/cli/latest/index.html

aws iam list-user-policies  --user-name devv1

aws ec2 create-key-pair --key-name Mynewkeys --query 'KeyMaterial' --output text > Mynewkeys.pem

aws ec2 create-security-group --group-name MyGroup1 --description "my sgg"

"GroupId": "sg-0ece96afc3829d6e2"

aws ec2 authorize-security-group-ingress --group-name MyGroup1 --protocol tcp --port 3389 --cidr 0.0.0.0/0

aws ec2 run-instances --image-id ami-00eb20669e0990cb4 --count 1 --instance-type t2.micro --key-name Mynewkeys --security-groups MyGroup1

aws ec2 describe-instances

aws ec2 describe-instances --query  'Reservations[*].Instances[*].[InstanceId,State,Name,LaunchTime,PublicIpAddress]'


// S3
aws s3 mb s3://aakashdeveloperfunnel
aws s3 cp "/Users/avi/Desktop/test.png" s3://aakashdeveloperfunnel

aws s3 cp s3://aakashdeveloperfunnelnov/test.png /Users/avi/Desktop